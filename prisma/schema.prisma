generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id      String   @id
  sid     String   @unique
  data    String
  expires DateTime
}

model User {
  id                Int           @id @default(autoincrement())
  name              String?
  email             String        @unique
  email_verified_at DateTime?
  password          String
  isAdmin           Boolean       @default(false)
  createdAt         DateTime      @default(now())
  modifiedAt        DateTime      @default(now())
  accounts          Account[]
  categories        Category[]
  Transaction       Transaction[]
}

model Account {
  id           Int           @id @default(autoincrement())
  userId       Int
  name         String
  icon         String?
  balance      Float         @default(0.0)
  order        Int
  color        String        @default("#000000")
  createdAt    DateTime      @default(now())
  modifiedAt   DateTime      @default(now())
  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Category {
  id            Int           @id @default(autoincrement())
  userId        Int
  name          String
  icon          String?
  income        Boolean       @default(false)
  order         Int
  color         String        @default("#000000")
  createdAt     DateTime      @default(now())
  modifiedAt    DateTime      @default(now())
  user          User          @relation(fields: [userId], references: [id])
  subcategories Subcategory[]
  transactions  Transaction[]
}

model Subcategory {
  id           Int           @id @default(autoincrement())
  categoryId   Int
  name         String
  icon         String?
  order        Int
  createdAt    DateTime      @default(now())
  modifiedAt   DateTime      @default(now())
  category     Category      @relation(fields: [categoryId], references: [id])
  transactions Transaction[]
}

model Transaction {
  id                Int          @id @default(autoincrement())
  userId            Int
  categoryId        Int
  subcategoryId     Int?
  accountId         Int
  amount            Float        @default(0.0)
  description       String
  memory            String
  year              Int
  month             Int
  day               Int
  hour              Int
  minutes           Int
  income            Boolean      @default(false)
  transfer          Boolean      @default(false)
  transferAccountId Int?
  createdAt         DateTime     @default(now())
  modifiedAt        DateTime     @default(now())
  account           Account      @relation(fields: [accountId], references: [id])
  category          Category     @relation(fields: [categoryId], references: [id])
  subcategory       Subcategory? @relation(fields: [subcategoryId], references: [id])
  user              User         @relation(fields: [userId], references: [id])
}
